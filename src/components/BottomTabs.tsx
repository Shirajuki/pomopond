import { h } from 'preact';
import { StateUpdater, useState } from 'preact/hooks';
import { ScreenEnum } from '../types';

interface IBottomTabs {
  screen: number;
  setScreen: StateUpdater<number>;
}
interface ITabIcon {
  tab: number;
}

const TabIcon = ({ tab }: ITabIcon) => {
  const color = '#C4C4C4';
  switch (tab) {
    case ScreenEnum.Pomodoro:
      return (
        <svg
          width="25"
          height="25"
          viewBox="0 0 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle cx="12.5" cy="12.5" r="12.5" fill={color} />
          <path
            d="M18.5 9L12.5 17L8 13.5"
            stroke="white"
            stroke-width="2"
            style={{ fill: 'none' }}
          />
        </svg>
      );
    case ScreenEnum.Calendar:
      return (
        <svg
          width="25"
          height="19"
          viewBox="0 0 25 19"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect y="1" width="25" height="18" rx="3" fill={color} />
          <path d="M7 0V4.5" stroke="#707070" />
          <path d="M18 0V4.5" stroke="#707070" />
          <path d="M4 8H21" stroke="white" />
        </svg>
      );
    case ScreenEnum.Gallery:
      return (
        <svg
          width="23"
          height="23"
          viewBox="0 0 23 23"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clip-path="url(#clip0_217_285)">
            <path
              d="M3.59375 5.92969V20.6641C3.59375 20.9023 3.68841 21.1309 3.8569 21.2994C4.02539 21.4678 4.25391 21.5625 4.49219 21.5625H22.1016C22.3398 21.5625 22.5684 21.4678 22.7369 21.2994C22.9053 21.1309 23 20.9023 23 20.6641V5.92969C23 5.69141 22.9053 5.46289 22.7369 5.2944C22.5684 5.12591 22.3398 5.03125 22.1016 5.03125H4.49219C4.25391 5.03125 4.02539 5.12591 3.8569 5.2944C3.68841 5.46289 3.59375 5.69141 3.59375 5.92969ZM16.7621 7.78631C17.1703 7.78879 17.5686 7.91209 17.9067 8.14066C18.2449 8.36922 18.5078 8.69281 18.6623 9.07061C18.8167 9.44841 18.8559 9.86349 18.7747 10.2635C18.6936 10.6635 18.4958 11.0305 18.2063 11.3183C17.9168 11.606 17.5486 11.8016 17.1481 11.8803C16.7476 11.959 16.3328 11.9174 15.9559 11.7606C15.5791 11.6038 15.2571 11.339 15.0306 10.9994C14.8041 10.6599 14.6832 10.2609 14.6832 9.85272C14.6854 9.30319 14.9056 8.77699 15.2953 8.3896C15.6851 8.0022 16.2126 7.78523 16.7621 7.78631ZM5.01912 20.1847V15.8956L10.5337 10.9452L14.7465 15.1387L9.67033 20.1847H5.01912ZM21.5625 20.1847H11.6348L18.1296 13.716L21.5625 16.6476V20.1847Z"
              fill={color}
            />
            <path
              d="M0.898438 1.4375C0.660157 1.4375 0.431636 1.53216 0.263146 1.70065C0.0946565 1.86914 0 2.09766 0 2.33594L0 17.7891C0 18.0273 0.0946565 18.2559 0.263146 18.4244C0.431636 18.5928 0.660157 18.6875 0.898438 18.6875H2.15625V4.49219C2.15625 4.25391 2.25091 4.02539 2.4194 3.8569C2.58789 3.68841 2.81641 3.59375 3.05469 3.59375H20.125V2.33594C20.125 2.09766 20.0303 1.86914 19.8619 1.70065C19.6934 1.53216 19.4648 1.4375 19.2266 1.4375H0.898438Z"
              fill={color}
            />
          </g>
          <defs>
            <clipPath id="clip0_217_285">
              <rect width="23" height="23" fill="white" />
            </clipPath>
          </defs>
        </svg>
      );
    case ScreenEnum.Settings:
      return (
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M23.7032 10.1761L21.0205 9.37608C20.8351 8.72913 20.58 8.10415 20.2598 7.51209L21.5731 5.0561C21.6224 4.96339 21.6404 4.85728 21.6245 4.75352C21.6087 4.64976 21.5597 4.55388 21.485 4.4801L19.5711 2.56011C19.4973 2.48545 19.4013 2.43656 19.2974 2.42071C19.1936 2.40485 19.0874 2.42288 18.9946 2.47211L16.5522 3.7761C15.9537 3.44063 15.3199 3.17234 14.6623 2.97611L13.8615 0.328121C13.8277 0.230534 13.7637 0.146201 13.6788 0.0872595C13.5939 0.0283181 13.4924 -0.00219138 13.3891 0.000122534H10.6824C10.5785 0.000606191 10.4773 0.03423 10.3938 0.0961006C10.3103 0.157971 10.2487 0.24486 10.218 0.344121L9.4172 2.98411C8.75417 3.17929 8.11494 3.44761 7.51134 3.7841L5.10899 2.48811C5.0162 2.43888 4.90998 2.42085 4.80612 2.43671C4.70226 2.45256 4.60628 2.50145 4.53243 2.57611L2.58653 4.4721C2.51179 4.54588 2.46286 4.64176 2.44699 4.74552C2.43112 4.84928 2.44916 4.95539 2.49844 5.0481L3.79571 7.44809C3.45943 8.04856 3.19086 8.68444 2.99493 9.34408L0.344337 10.1441C0.244978 10.1747 0.158004 10.2363 0.0960724 10.3197C0.034141 10.4032 0.000484132 10.5042 0 10.6081V13.3121C0.000484132 13.4159 0.034141 13.517 0.0960724 13.6004C0.158004 13.6839 0.244978 13.7454 0.344337 13.7761L3.01094 14.576C3.20901 15.2247 3.47754 15.8497 3.81172 16.44L2.49844 18.952C2.44916 19.0447 2.43112 19.1508 2.44699 19.2546C2.46286 19.3584 2.51179 19.4542 2.58653 19.528L4.5004 21.44C4.57425 21.5147 4.67023 21.5636 4.77409 21.5794C4.87795 21.5953 4.98417 21.5772 5.07696 21.528L7.55138 20.208C8.13672 20.5236 8.75417 20.7757 9.39318 20.96L10.194 23.656C10.2246 23.7553 10.2862 23.8422 10.3698 23.904C10.4533 23.9659 10.5544 23.9995 10.6584 24H13.3651C13.469 23.9995 13.5702 23.9659 13.6537 23.904C13.7372 23.8422 13.7988 23.7553 13.8295 23.656L14.6303 20.952C15.2638 20.7667 15.8759 20.5146 16.4561 20.2L18.9465 21.528C19.0393 21.5772 19.1455 21.5953 19.2494 21.5794C19.3532 21.5636 19.4492 21.5147 19.5231 21.44L21.4369 19.528C21.5117 19.4542 21.5606 19.3584 21.5765 19.2546C21.5924 19.1508 21.5743 19.0447 21.525 18.952L20.1957 16.472C20.5139 15.8902 20.769 15.276 20.9565 14.64L23.6551 13.8401C23.7545 13.8094 23.8414 13.7479 23.9034 13.6644C23.9653 13.581 23.999 13.4799 23.9995 13.3761V10.6481C24.0042 10.5486 23.9783 10.45 23.9254 10.3657C23.8724 10.2813 23.7949 10.2151 23.7032 10.1761V10.1761ZM12.0358 16.4C11.1647 16.4 10.3131 16.142 9.58886 15.6585C8.86458 15.175 8.30007 14.4879 7.96672 13.6839C7.63336 12.8799 7.54614 11.9952 7.71608 11.1417C7.88603 10.2882 8.30549 9.50416 8.92145 8.88881C9.5374 8.27346 10.3222 7.8544 11.1765 7.68463C12.0309 7.51486 12.9164 7.60199 13.7212 7.93501C14.526 8.26804 15.2139 8.83199 15.6978 9.55557C16.1818 10.2791 16.4401 11.1298 16.4401 12.0001C16.4401 13.167 15.976 14.2862 15.1501 15.1113C14.3241 15.9365 13.2039 16.4 12.0358 16.4V16.4Z"
            fill={color}
          />
        </svg>
      );
    default:
      return <></>;
  }
};

const BottomTabs = ({ screen, setScreen }: IBottomTabs) => {
  return (
    <div class="bottomTabs">
      {Object.keys(ScreenEnum)
        .filter((v) => isNaN(Number(v)) && v != 'Login')
        .map((key, index) => {
          const tab = Object.values(ScreenEnum).indexOf(key);
          return (
            <div
              class={`tabs ${screen == tab ? 'active' : ''}`}
              key={index}
              onClick={() => screen != tab && setScreen(tab)}
            >
              <TabIcon tab={tab} />
              <p>{key}</p>
            </div>
          );
        })}
    </div>
  );
};
export default BottomTabs;
